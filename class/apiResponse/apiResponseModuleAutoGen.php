<?php

namespace rpf\apiResponse;
use rpf\system\module;

class apiResponseModuleAutoGen extends module
{
    /**
     * @var array [] = $name
     */
    protected $classes = [];

    /**
     * @var array [$property][$name] = ['value' => $value, 'desc' => $desc]
     */
    protected $properties = [];

    /**
     * @var array [$class][$name] = ['value' => $value, 'desc' => $desc]
     */
    protected $methods = [];

    /**
     * Parse the given directory and returns a array of all classes
     * @param string $dir
     * @return array $classes['class1', 'class2', ...]
     */
    protected static function parseDirectory($dir = __DIR__.'/../api/module/')
    {
        return [];
    }

    protected function parseRpcResponse($rpcResponse, $propertyPrefix='', $methodPrefix = 'get')
    {
        foreach ($rpcResponse as $rpcName => $value)
        {
            $property ="{$propertyPrefix}__{$rpcName}";

            $method = $methodPrefix;
            foreach (explode('_', $rpcName) as $val)
            {
                $method .= ucfirst($val);
            }

            if (is_array($value) && !isset($value[0])) {
                $this->parseRpcResponse($value, $property, $method);
            }
            else
            {
                if ($value === NULL || $value === '')
                {
                    $type = 'string';
                }
                else if ($value === 0 || $value === 1)
                {
                    $type = 'bool';
                }
                else if ($value == intval($value))
                {
                    $type = 'integer';
                }
                else if ($value == floatval($value))
                {
                    $type = 'float';
                }
                else
                {
                    $type = 'string';
                }
            }
                $this->methods[$method] = ['type' => $type, 'desc' => "Returns \$this->$property {$this->getDesc($rpcName)}"];
                $this->properties[$property] = ['type' => $type, 'desc' => $this->getDesc($rpcName), $];
            }
        }
    }



    protected function getCodeModuleAutoGen()
    {
        foreach ($this->classes as $className => $class)
        {
            $code[$className] =
                "<?php\n\n" .
                "namespace rpf\\apiResponse\\moduleAutoGen\n" .
                "use rpf\\apiResponse\\apiResponseModule\n\n" .
                "/**\n" .
                " * ApiResponseModuleAutoGen $className\n" .
                " * \n" .
                " * !!! DO NOT EDIT THIS FILE !!!\n" .
                "*\n" .
                " * This file is generated automaticly.\n" .
                " *\n" .
                " * @author Andreas Doebeling <ad@1601.com>\n" .
                " * @copyright 1601.production siegler&thuemmler ohg\n" .
                " * @link https://github.com/ADoebeling/RP2-Framework\n" .
                " * @link https://xing-ad.1601.com\n" .
                " * @link https://www.1601.com\n" .
                " */\n" .
                " class blubb extends apiResponseModule\n" .
                " {\n";

            foreach ($this->properties[$className] as $propertyName => $property)
            {
                $code[$className] .=
                    "/**\n".
                    " * @var ".gettype($property['value'])." {$propertyName} {$property['desc']}\n".
                    " */\n".
                    "protected $propertyName\n\n";
            }

            foreach ($this->methods[$className] as $methodName => $method)
            {
                $code[$className] .=
                    "/**\n".
                    " * @return ".gettype($method['value'])." {$method['desc']}\n".
                    " */\n".
                    "public function $methodName()\n".
                    "{\n".
                    "   return $this->
    }
            }


            $code[$className] .= "}\n";
        }


}

    }

    protected function writeModuleAutoGen()
    {

    }

    /**
     * Get Description (Glossary)
     *
     * @see https://doku.premium-admin.eu/doku.php/api/glossary
     * @param $val
     * @return string
     */
    protected function getDesc($val)
    {
        $desc =
            [
                'aeid' => 'Account Entry ID',
                'aiid' => 'Account Item ID',
                'alid' => 'Account Limit(s) ID',
                'bid' => 'Browser ID',
                'ccid' => 'Customer Country ID',
                'cdid' => 'Customer Discount ID',
                'ceid' => 'Customer Entry ID',
                'cpid' => 'Customer Payment ID',
                'ctid' => 'Customer Title ID',
                'eaid' => 'E-Mail Address ID',
                'esid' => 'E-Mail Storage ID',
                'hid' => 'Handle ID',
                'laid' => 'Language ID',
                'nsid' => 'Nameserver Entry ID',
                'odid' => 'Order Disposition ID',
                'oeid' => 'Order Entry ID',
                'pdid' => 'Product Domain Contingent ID',
                'peid' => 'Product Entry ID',
                'pgid' => 'Product Group ID',
                'piid' => 'Product Interval ID',
                'ppid' => 'Product Period of Notice ID',
                'ptid' => 'Product TLD ID',
                'ptgid' => 'Product TLD Group ID',
                'puid' => 'Product Unit ID',
                'scale' => 'Scale ID',
                'scid' => 'Shopping Cart ID',
                'seid' => 'ServiceObject Entry ID',
                'sid' => 'Session ID',
                'uid' => 'User ID',
                'gen_uid' => 'Generation User ID',
                'upd_uid' => 'Update User ID'
            ];
        return isset($desc[$val]) ? $desc[$val] : '';
    }
}